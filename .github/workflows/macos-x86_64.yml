name: macos-x86_64

on:
  pull_request:
    paths-ignore:
      - '**/README.md'
      - 'examples/**'
      - 'nerves/**'
      - 'Makefile.win'
      - '.github/FUNDING.yml'
      - '.github/workflows/nerves-*.yml'
      - '.github/workflows/linux-*.yml'
      - '.github/workflows/windows-*.yml'
      - '.github/workflows/test-*.yml'
  push:
    branches:
      - main
      - test-*
    paths-ignore:
      - '**/README.md'
      - 'examples/**'
      - 'nerves/**'
      - 'Makefile.win'
      - '.github/FUNDING.yml'
      - '.github/workflows/nerves-*.yml'
      - '.github/workflows/linux-*.yml'
      - '.github/workflows/windows-*.yml'
      - '.github/workflows/test-*.yml'
  workflow_dispatch:

jobs:
  mix_test:
    runs-on: macos-11
    env:
      MIX_ENV: test

    strategy:
      fail-fast: false
      matrix:
        include:
          - pair:
              opencv_ver: 4.5.4
          - pair:
              opencv_ver: 4.5.5

    steps:
      - uses: actions/checkout@v2
      
      - name: Install Erlang and Elixir
        run: |
          brew install erlang
          brew install elixir
          brew install ffmpeg@4
          mix local.hex --force
          mix local.rebar --force

      - name: Mix Compile
        run: |
          export OPENCV_VER=${{ matrix.pair.opencv_ver }}
          export MIX_ENV=test
          mix deps.get
          NPROC="$(sysctl -a | grep 'hw.ncpu' | awk '{print $2}')"
          MAKE_BUILD_FLAGS="-j${NPROC}" mix compile

      - name: Mix Test
        run: |
          export OPENCV_VER=${{ matrix.pair.opencv_ver }}
          mix test --include require_downloading --include require_ffmpeg
