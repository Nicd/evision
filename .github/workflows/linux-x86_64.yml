name: linux-x86_64

on:
  pull_request:
  push:
    branches:
      - main
      - feature-*
      - experimental-*
      - test-*
    paths-ignore:
      - '**/README.md'
      - 'examples/**'
      - '.github/FUNDING.yml'
      - '.github/workflows/nerves-*'
      - '.github/workflows/macos-*'
      - '.github/workflows/linux-arm64.yml'
      - '.github/workflows/linux-armv7.yml'
      - '.github/workflows/linux-ppc64le.yml'
      - '.github/workflows/linux-s390x.yml'
  workflow_dispatch:

jobs:
  mix_test:
    runs-on: ubuntu-20.04
    env:
      MIX_ENV: test

    strategy:
      fail-fast: false
      matrix:
        include:
          - pair:
              elixir: 1.12.3
              otp: 24.1.5
              opencv_ver: 4.5.4
          - pair:
              elixir: 1.12.3
              otp: 24.1.5
              opencv_ver: 4.5.5

    steps:
      - uses: actions/checkout@v2
      
      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.pair.otp}}
          elixir-version: ${{matrix.pair.elixir}}
      
      - name: Install system dependecies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential automake autoconf pkg-config bc m4 unzip zip curl git libssl-dev libncurses5-dev erlang-inets erlang-os-mon erlang-runtime-tools erlang-ssl erlang-dev python3 ca-certificates
          sudo apt-get install -y libavcodec-dev libavformat-dev libavutil-dev libswscale-dev libavresample-dev ffmpeg

      - name: Compile
        run: |
          export OPENCV_VER=${{ matrix.pair.opencv_ver }}
          export MIX_ENV=test
          mix deps.get
          mix deps.compile
          MAKE_BUILD_FLAGS="-j$(nproc)" mix compile

      - name: Test
        run: |
          mix test
